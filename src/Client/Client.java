/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author nnt12
 */
public class Client extends javax.swing.JFrame {

    public DataOutputStream out = null;
    public DataInputStream in = null;
    public Socket sk = null;
    public int port = -1;
    public String host = null;

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        li_chanel = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        li_user = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txt_list_cl_fr = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Gửi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        li_chanel.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                li_chanelValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(li_chanel);

        jLabel2.setText("List user in chanel");

        jScrollPane3.setViewportView(li_user);

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("-");

        txt_list_cl_fr.setText("List chanel");
        txt_list_cl_fr.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_list_cl_fr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_list_cl_frActionPerformed(evt);
            }
        });

        jButton4.setText("S");
        jButton4.setToolTipText("Setting");

        jMenu1.setText("Kết nối");

        jMenuItem1.setText("Đăng nhập");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Chức năng");

        jMenuItem2.setText("Đổi username");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Đổi password");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txt_list_cl_fr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_list_cl_fr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void send(String str) {
        try {
            out.writeUTF(str);
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (login == true) {
            String message = jTextField2.getText().trim();
            if (!"".equals(message)) {
                jTextField2.setText("");
                send("msg-000@" + message);
            }
        } else {
            jTextArea1.append("Bạn chưa đăng nhập" + "\n");
            jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    boolean login;
    String session;
    int a = 0;
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Connect fm = new Connect(this, true);
        fm.setVisible(true);
        if (login == true && a == 0) {
            ThreadClient();
            a++;
        } else {
            send("sys-012@" + session);
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        ChangeUsername ch = new ChangeUsername(this, true);
        ch.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        ChangePassword ch = new ChangePassword(this, true);
        ch.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (login == true) {
                String message = jTextField2.getText().trim();
                if (!"".equals(message)) {
                    jTextField2.setText("");
                    send("msg-000@" + message);
                }
            }
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    public String ischanel = "chanel";

    private void txt_list_cl_frActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_list_cl_frActionPerformed
        if ("chanel".equals(ischanel)) {
            txt_list_cl_fr.setText("List friend");
            ischanel = "friend";
        } else {
            txt_list_cl_fr.setText("List chanel");
            ischanel = "chanel";
        }
        if (ischanel == "chanel") {
            send("sys-010@");
        } else {
            send("sys-013@");
        }
    }//GEN-LAST:event_txt_list_cl_frActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AddChanel fm = new AddChanel(this, true);
        fm.setVisible(true);
        if (ischanel == "chanel") {
            send("msg-010@");
        } else {
            send("msg-013@");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void li_chanelValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_li_chanelValueChanged
        int a = li_chanel.getSelectedIndex();
        if (a < 0) {
            send("sys-016@");
            return;
        }
        try {
            System.out.println(a);
            String str = listchanel.get(a);
            send("sys-016@" + str);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_li_chanelValueChanged

    public void connect(String host, int port) {
        try {
            if (sk == null) {
                sk = new Socket(host, port);
                in = new DataInputStream(sk.getInputStream());
                out = new DataOutputStream(sk.getOutputStream());
            }
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private ArrayList<String> listchanel = new ArrayList<>();

    private void ThreadClient() {
        new Thread(new Runnable() {
            @Override
            public void run() {

                send("sys-012@" + session);

                send("sys-005@");
                if (ischanel == "chanel") {
                    send("sys-010@");
                } else {
                    send("sys-013@");
                }

                while (true) {
                    // Nhận
                    String msg;
                    try {
                        msg = in.readUTF();
                        String code = msg.substring(4, msg.indexOf("@"));
                        String body = msg.substring(msg.indexOf("@") + 1);
                        String title = msg.substring(0, msg.indexOf("@"));
                        if ("msg".equals(msg.substring(0, 3))) {
                            jTextArea1.append(body + "\n");
                            jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
                        } else if ("sys".equals(msg.substring(0, 3))) {
                            if ("500".equals(code)) {
                                jTextArea1.append("Bạn chưa đăng nhập" + "\n");
                                jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
                            } else if ("006".equals(code)) {
                                DefaultListModel listModel = new DefaultListModel();
                                String[] auser = body.split("@@@");

                                for (String user : auser) {
                                    listModel.addElement(user);
                                }
                                li_user.setModel(listModel);
                            } else if ("011".equals(code)) {
                                DefaultListModel listModel = new DefaultListModel();
                                li_chanel.setModel(listModel);
                                li_user.setModel(new DefaultListModel());
                                if (!"".equals(body)) {
                                    String[] auser = body.split("@@@");
                                    listchanel.clear();
                                    for (String user : auser) {
                                        String[] ausers = user.split("@@");
                                        listModel.addElement(ausers[0]);
                                        listchanel.add(ausers[1]);
                                    }
                                    li_chanel.setModel(listModel);
                                }
                            } else if ("014".equals(code)) {
                                DefaultListModel listModel = new DefaultListModel();
                                li_chanel.setModel(listModel);
                                li_user.setModel(new DefaultListModel());
                                if (!"".equals(body)) {
                                    String[] auser = body.split("@@@");
                                    listchanel.clear();
                                    for (String user : auser) {
                                        String[] ausers = user.split("@@");
                                        listModel.addElement(ausers[0]);
                                        listchanel.add(ausers[1]);
                                    }
                                    li_chanel.setModel(listModel);
                                }
                            }
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                        jTextArea1.append("Mất kết nối server");
                        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
                        break;
                    }
                }
            }
        }).start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JList<String> li_chanel;
    private javax.swing.JList<String> li_user;
    private javax.swing.JButton txt_list_cl_fr;
    // End of variables declaration//GEN-END:variables
}
